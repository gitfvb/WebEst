-- CREATE TABLES --

CREATE TABLE ApplicationTypeGroup (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	name VARCHAR(50) NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT UNQ_ATG_NAME UNIQUE (name)
);
CREATE TABLE ApplicationType (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50) NOT NULL,
	"GROUP" INTEGER NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT FK_AT_GROUP FOREIGN KEY ("GROUP") REFERENCES ApplicationTypeGroup (id) ON DELETE CASCADE
);
CREATE TABLE Country (
	code char(2) NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	PRIMARY KEY (code), 
	CONSTRAINT UNQ_COUNTRY_NAME UNIQUE (name),
	CONSTRAINT CHK_COUNTRY_ACR CHECK (LENGTH(code) = 2 AND code = UPPER(code))
);
CREATE TABLE DefectCategory (
	id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	included SMALLINT NOT NULL, 
	name VARCHAR(50), 
	percentage SMALLINT, 
	owner INTEGER NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT CHK_DC_INC CHECK (included = 1 OR included = 0),
	CONSTRAINT CHK_DC_PERC CHECK (percentage IS NULL OR (percentage >= 0 AND percentage <= 100))
);
CREATE TABLE EffortUnit (
	id VARCHAR(10) NOT NULL,
	name VARCHAR(50) NOT NULL,
	factor DOUBLE NOT NULL, 
	reference SMALLINT NOT NULL, 
	PRIMARY KEY (id),
	CONSTRAINT UNQ_EU_NAME UNIQUE (name),
	CONSTRAINT CHK_EU_REF CHECK (reference = 1 OR reference = 0),
	CONSTRAINT CHK_EU_FACT CHECK (factor >= 0)
);
CREATE TABLE IndustrySectorGroup (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	name VARCHAR(50) NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT UNQ_ISG_NAME UNIQUE (name)
);
CREATE TABLE IndustrySector (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50) NOT NULL,
	"GROUP" INTEGER NOT NULL, 
	PRIMARY KEY (id),
	CONSTRAINT FK_IS_GROUP FOREIGN KEY ("GROUP") REFERENCES IndustrySectorGroup (id) ON DELETE CASCADE
);
CREATE TABLE Organization (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50) NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT UNQ_ORG_NAME UNIQUE (name)
);
CREATE TABLE Division (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50) NOT NULL,
	organization INT NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT FK_DIV_ORG FOREIGN KEY (organization) REFERENCES Organization (id) ON DELETE CASCADE,
	CONSTRAINT UNQ_DIV_NAME UNIQUE (name)
);
CREATE TABLE Certainty (
	id CHAR(1) NOT NULL,
	name VARCHAR(50) NOT NULL,
	factor DOUBLE NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT CHK_CERT_FACT CHECK (factor >= 0 AND factor <= 1)
);
CREATE TABLE PiHistoryCategory (
	id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50) NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT UNQ_PHC_NAME UNIQUE (name)
);
CREATE TABLE PiHistoryEntry (
	id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	projectName VARCHAR(50) NOT NULL,
	category INT NOT NULL,
	pi INT NOT NULL,
	effort DOUBLE NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT FK_PHE_CAT FOREIGN KEY (category) REFERENCES PiHistoryCategory (id) ON DELETE CASCADE
);
CREATE TABLE PiPpLookup (
	pi INT NOT NULL,
	pp INT NOT NULL,
	PRIMARY KEY (pi)
);
CREATE TABLE Role (
	id VARCHAR(20) NOT NULL,
	name VARCHAR(50) NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT UNQ_ROLE_NAME UNIQUE (name),
	CONSTRAINT CHK_ROLE_ID CHECK (LENGTH(id) > 0 AND LOWER(id) = id)
);
CREATE TABLE "USER" (
	id VARCHAR(50) NOT NULL,
	firstName VARCHAR(50) NOT NULL,
	lastName VARCHAR(50) NOT NULL,
	password VARCHAR(32) NOT NULL,
	role VARCHAR(20),
	division INT,
	PRIMARY KEY (id),
	CONSTRAINT FK_USER_ROLE FOREIGN KEY (role) REFERENCES Role (id) ON DELETE SET NULL,
	CONSTRAINT FK_USER_DIV FOREIGN KEY (division) REFERENCES Division (id) ON DELETE SET NULL,
	CONSTRAINT CHK_USER_ID CHECK (LENGTH(id) > 0 AND LOWER(id) = id)
);
CREATE TABLE Phase (
	id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	number SMALLINT NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	acronym VARCHAR(10) NOT NULL, 
	description VARCHAR(4000),
	owner INTEGER NOT NULL,
	percentage SMALLINT,
	PRIMARY KEY (id),
	CONSTRAINT CHK_PHASE_NO CHECK (number >= 1 AND number <= 4),
	CONSTRAINT CHK_PHASE_PERC CHECK (percentage IS NULL OR (percentage >= 0 AND percentage <= 100))
);
CREATE TABLE Milestone (
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	milestoneId SMALLINT NOT NULL,
	owner INTEGER NOT NULL, 
	acronym VARCHAR(10) NOT NULL, 
	description VARCHAR(4000), 
	name VARCHAR(50) NOT NULL, 
	percentage SMALLINT NOT NULL, 
	phase INT,
	included SMALLINT NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT CHK_MILST_INC CHECK (included = 1 OR included = 0),
	CONSTRAINT FK_MILST_PHASE FOREIGN KEY (phase) REFERENCES Phase (id) ON DELETE CASCADE,
	CONSTRAINT CHK_MILST_PERC CHECK (percentage >= 0 AND percentage <= 100)
);
CREATE TABLE MonetaryUnit (
	id VARCHAR(10) NOT NULL, 
	name VARCHAR(50) NOT NULL,
	factor DOUBLE NOT NULL, 
	reference SMALLINT NOT NULL, 
	PRIMARY KEY (id),
	CONSTRAINT UNQ_MU_NAME UNIQUE (name),
	CONSTRAINT CHK_MU_REF CHECK (reference = 1 OR reference = 0),
	CONSTRAINT CHK_MU_FACT CHECK (factor >= 0)
);
CREATE TABLE MTTDTimeUnit (
	id VARCHAR(10) NOT NULL,
	name VARCHAR(50) NOT NULL,
	factor DOUBLE NOT NULL, 
	reference SMALLINT NOT NULL, 
	PRIMARY KEY (id),
	CONSTRAINT UNQ_MTU_NAME UNIQUE (name),
	CONSTRAINT CHK_MTU_REF CHECK (reference = 1 OR reference = 0),
	CONSTRAINT CHK_MTU_FACT CHECK (factor >= 0)
);
CREATE TABLE Estimate (
	id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	name VARCHAR(50) NOT NULL, 
	comment VARCHAR(4000), 
	creationDate TIMESTAMP NOT NULL,
	modifyDate TIMESTAMP NOT NULL,
	estimator VARCHAR(50) NOT NULL,
	lastEditor VARCHAR(50) NOT NULL,
	division INT NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT FK_EST_LE FOREIGN KEY (lastEditor) REFERENCES "USER" (id),
	CONSTRAINT FK_EST_EST FOREIGN KEY (estimator) REFERENCES "USER" (id),
	CONSTRAINT FK_EST_DIV FOREIGN KEY (division) REFERENCES Division (id)
);
CREATE TABLE Template (
	id INTEGER NOT NULL, 
	daysPerWeek SMALLINT NOT NULL, 
	hoursPerDay SMALLINT NOT NULL, 
	description VARCHAR(4000), 
	name VARCHAR(50) NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT UNQ_TPL_NAME UNIQUE (name),
	CONSTRAINT CHK_TPL_DPW CHECK (daysPerWeek >= 1 AND daysPerWeek <= 7),
	CONSTRAINT CHK_TPL_HPD CHECK (hoursPerDay >= 1 AND hoursPerDay <= 24)
);
CREATE TABLE ProjectEnvironment (
	id INTEGER NOT NULL, 
	daysPerWeek SMALLINT NOT NULL, 
	hoursPerDay SMALLINT NOT NULL, 
	projectDescription VARCHAR(4000), 
	projectName VARCHAR(50) NOT NULL, 
	applicationtype INTEGER NOT NULL, 
	country CHAR(2) NOT NULL, 
	effortunit VARCHAR(10) NOT NULL, 
	estimate INTEGER NOT NULL, 
	industrysector INTEGER NOT NULL, 
	monetaryunit VARCHAR(10) NOT NULL, 
	mttdtimeunit VARCHAR(10) NOT NULL,
	template INT,
	PRIMARY KEY (id),
	CONSTRAINT FK_PE_TPL FOREIGN KEY (template) REFERENCES Template (id),
	CONSTRAINT FK_PE_COUNTRY FOREIGN KEY (country) REFERENCES Country (code),
	CONSTRAINT FK_PE_AT FOREIGN KEY (applicationtype) REFERENCES ApplicationType (id),
	CONSTRAINT FK_PE_EU FOREIGN KEY (effortunit) REFERENCES EffortUnit (id),
	CONSTRAINT FK_PE_MU FOREIGN KEY (monetaryunit) REFERENCES MonetaryUnit (id),
	CONSTRAINT FK_PE_MTU FOREIGN KEY (mttdtimeunit) REFERENCES MTTDTimeUnit (id),
	CONSTRAINT FK_PE_EST FOREIGN KEY (estimate) REFERENCES Estimate (id) ON DELETE CASCADE,
	CONSTRAINT FK_PE_IS FOREIGN KEY (industrysector) REFERENCES IndustrySector (id),
	CONSTRAINT UNQ_PE_EST UNIQUE (estimate),
	CONSTRAINT CHK_PE_DPW CHECK (daysPerWeek >= 1 AND daysPerWeek <= 7),
	CONSTRAINT CHK_PE_HPD CHECK (hoursPerDay >= 1 AND hoursPerDay <= 24)
);
CREATE TABLE OPENJPASEQ (
	ID SMALLINT NOT NULL, 
	SEQUENCE_VALUE BIGINT,
	PRIMARY KEY (ID)
);
CREATE TABLE GranularityLevel (
	id SMALLINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	name VARCHAR(50) NOT NULL, 
	"VALUE" SMALLINT NOT NULL, 
	PRIMARY KEY (id),
	CONSTRAINT UNQ_GL_NAME UNIQUE (name)
);
CREATE TABLE Solution (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(50) NOT NULL,
	estimate INT NOT NULL, 	
	pi INT,
	pp INT,
	gearingFactor INT NOT NULL,
	granularity SMALLINT NOT NULL,
	projectStartDate DATE NOT NULL,
	comment VARCHAR(4000),
	creationDate TIMESTAMP NOT NULL,
	modifyDate TIMESTAMP NOT NULL,
	lastEditor VARCHAR(50) NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT CHK_SOL_PI CHECK (pi IS NULL OR pi >= 1),
	CONSTRAINT CHK_SOL_PP CHECK (pp IS NULL OR pp >= 1),
	CONSTRAINT FK_SOL_LE FOREIGN KEY (lastEditor) REFERENCES "USER" (id),
	CONSTRAINT FK_SOL_EST FOREIGN KEY (estimate) REFERENCES Estimate (id) ON DELETE CASCADE,
	CONSTRAINT FK_SOL_GRAN FOREIGN KEY (granularity) REFERENCES GranularityLevel (id)
);
CREATE TABLE UseCasePack (
	id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	name VARCHAR(50) NOT NULL,
	solution BIGINT NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT FK_UCP_SOL FOREIGN KEY (solution) REFERENCES Solution (id) ON DELETE CASCADE
);
CREATE TABLE UseCaseComplexity (
	id VARCHAR(3) NOT NULL, 
	name VARCHAR(50) NOT NULL,
	factor DOUBLE NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT CHK_UCC_ID CHECK (LENGTH(id) >=1 AND UPPER(id) = id)
);
CREATE TABLE UseCase (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	name VARCHAR(50) NOT NULL, 
	multiplier DOUBLE NOT NULL,
	granularityOverride SMALLINT,
	assumptions VARCHAR(4000),
	inScope SMALLINT NOT NULL,
	certainty CHAR(1) NOT NULL,
	useCaseComplexity VARCHAR(3) NOT NULL,
	useCasePack INT NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT CHK_UC_SCOPE CHECK (inScope = 1 OR inScope = 0),
	CONSTRAINT CHK_UC_MULT CHECK (multiplier >= 0),
	CONSTRAINT FK_UC_CERT FOREIGN KEY (certainty) REFERENCES Certainty (id),
	CONSTRAINT FK_UC_PACK FOREIGN KEY (useCasePack) REFERENCES UseCasePack (id) ON DELETE CASCADE,
	CONSTRAINT FK_UC_COMPL FOREIGN KEY (useCaseComplexity) REFERENCES UseCaseComplexity (id),
	CONSTRAINT FK_UC_GRAN FOREIGN KEY (granularityOverride) REFERENCES GranularityLevel (id)
);
CREATE TABLE "CONSTRAINT" (
	id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"TYPE" VARCHAR(50) NOT NULL, 
	solution BIGINT NOT NULL, 
	target DOUBLE NOT NULL, 
	targetProbability SMALLINT, 
	PRIMARY KEY (id), 
	CONSTRAINT FK_CSTR_SOL FOREIGN KEY (solution) REFERENCES Solution (id) ON DELETE CASCADE,
	CONSTRAINT CHK_CSTR_TP CHECK (targetProbability >= 0 AND targetProbability <= 100)
);
CREATE TABLE GranularityQuestion (
	id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	factorName VARCHAR(20) NOT NULL, 
	level SMALLINT NOT NULL,
	question VARCHAR(4000) NOT NULL, 
	factor DOUBLE NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT FK_GQ_GL FOREIGN KEY (level) REFERENCES GranularityLevel (id)
);
CREATE TABLE StaffingShape (
	id SMALLINT NOT NULL GENERATED BY DEFAULT AS IDENTITY, 
	name VARCHAR(50) NOT NULL, 
	PRIMARY KEY (id),
	CONSTRAINT UNQ_SS_NAME UNIQUE (name)
);
CREATE TABLE Solution_StaffingShape (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	phase INT NOT NULL,
	solution BIGINT NOT NULL,
	staffingShape SMALLINT NOT NULL,
	selected SMALLINT NOT NULL,
	PRIMARY KEY (id),
	CONSTRAINT UNQ_SSS_PH_SOL_SS UNIQUE (phase, solution, staffingShape),
	CONSTRAINT FK_SSS_PHASE FOREIGN KEY (phase) REFERENCES Phase (id) ON DELETE CASCADE,
	CONSTRAINT FK_SSS_SOL FOREIGN KEY (solution) REFERENCES Solution (id) ON DELETE CASCADE,
	CONSTRAINT FK_SSS_SS FOREIGN KEY (staffingShape) REFERENCES StaffingShape (id) ON DELETE CASCADE,
	CONSTRAINT CHK_SSS_SEL CHECK (selected = 0 OR selected = 1)
);
CREATE TABLE Solution_GranularityQuestion (
	solution BIGINT NOT NULL,
	granularityQuestion INT NOT NULL,
	PRIMARY KEY (solution, granularityQuestion),
	CONSTRAINT FK_SGQ_GQ FOREIGN KEY (granularityQuestion) REFERENCES GranularityQuestion (id) ON DELETE CASCADE,
	CONSTRAINT FK_SGQ_SOL FOREIGN KEY (solution) REFERENCES Solution (id) ON DELETE CASCADE
);
CREATE TABLE CalculationParameter (
	"KEY" VARCHAR(50) NOT NULL,
	"VALUE" DOUBLE NOT NULL,
	PRIMARY KEY ("KEY")
);


-- INSERT ISO COUNTRIES --

INSERT INTO Country (code, name) VALUES ('AF', 'Afghanistan');
INSERT INTO Country (code, name) VALUES ('AL', 'Albania');
INSERT INTO Country (code, name) VALUES ('DZ', 'Algeria');
INSERT INTO Country (code, name) VALUES ('AS', 'American Samoa');
INSERT INTO Country (code, name) VALUES ('AD', 'Andorra');
INSERT INTO Country (code, name) VALUES ('AO', 'Angola');
INSERT INTO Country (code, name) VALUES ('AI', 'Anguilla');
INSERT INTO Country (code, name) VALUES ('AQ', 'Antarctica');
INSERT INTO Country (code, name) VALUES ('AG', 'Antigua and Barbuda');
INSERT INTO Country (code, name) VALUES ('AR', 'Argentina');
INSERT INTO Country (code, name) VALUES ('AM', 'Armenia');
INSERT INTO Country (code, name) VALUES ('AW', 'Aruba');
INSERT INTO Country (code, name) VALUES ('AU', 'Australia');
INSERT INTO Country (code, name) VALUES ('AT', 'Austria');
INSERT INTO Country (code, name) VALUES ('AZ', 'Azerbaijan');
INSERT INTO Country (code, name) VALUES ('BS', 'Bahamas');
INSERT INTO Country (code, name) VALUES ('BH', 'Bahrain');
INSERT INTO Country (code, name) VALUES ('BD', 'Bangladesh');
INSERT INTO Country (code, name) VALUES ('BB', 'Barbados');
INSERT INTO Country (code, name) VALUES ('BY', 'Belarus');
INSERT INTO Country (code, name) VALUES ('BE', 'Belgium');
INSERT INTO Country (code, name) VALUES ('BZ', 'Belize');
INSERT INTO Country (code, name) VALUES ('BJ', 'Benin');
INSERT INTO Country (code, name) VALUES ('BM', 'Bermuda');
INSERT INTO Country (code, name) VALUES ('BT', 'Bhutan');
INSERT INTO Country (code, name) VALUES ('BO', 'Bolivia');
INSERT INTO Country (code, name) VALUES ('BA', 'Bosnia and Herzegovina');
INSERT INTO Country (code, name) VALUES ('BW', 'Botswana');
INSERT INTO Country (code, name) VALUES ('BV', 'Bouvet Island');
INSERT INTO Country (code, name) VALUES ('BR', 'Brazil');
INSERT INTO Country (code, name) VALUES ('IO', 'British Indian Ocean Territory');
INSERT INTO Country (code, name) VALUES ('BN', 'Brunei Darussalam');
INSERT INTO Country (code, name) VALUES ('BG', 'Bulgaria');
INSERT INTO Country (code, name) VALUES ('BF', 'Burkina Faso');
INSERT INTO Country (code, name) VALUES ('BI', 'Burundi');
INSERT INTO Country (code, name) VALUES ('KH', 'Cambodia');
INSERT INTO Country (code, name) VALUES ('CM', 'Cameroon');
INSERT INTO Country (code, name) VALUES ('CA', 'Canada');
INSERT INTO Country (code, name) VALUES ('CV', 'Cape Verde');
INSERT INTO Country (code, name) VALUES ('KY', 'Cayman Islands');
INSERT INTO Country (code, name) VALUES ('CF', 'Central African Republic');
INSERT INTO Country (code, name) VALUES ('TD', 'Chad');
INSERT INTO Country (code, name) VALUES ('CL', 'Chile');
INSERT INTO Country (code, name) VALUES ('CN', 'China');
INSERT INTO Country (code, name) VALUES ('CX', 'Christmas Island');
INSERT INTO Country (code, name) VALUES ('CC', 'Cocos (Keeling) Islands');
INSERT INTO Country (code, name) VALUES ('CO', 'Colombia');
INSERT INTO Country (code, name) VALUES ('KM', 'Comoros');
INSERT INTO Country (code, name) VALUES ('CG', 'Congo');
INSERT INTO Country (code, name) VALUES ('CD', 'Congo, the Democratic Republic of the');
INSERT INTO Country (code, name) VALUES ('CK', 'Cook Islands');
INSERT INTO Country (code, name) VALUES ('CR', 'Costa Rica');
INSERT INTO Country (code, name) VALUES ('CI', 'Cote D''Ivoire');
INSERT INTO Country (code, name) VALUES ('HR', 'Croatia');
INSERT INTO Country (code, name) VALUES ('CU', 'Cuba');
INSERT INTO Country (code, name) VALUES ('CY', 'Cyprus');
INSERT INTO Country (code, name) VALUES ('CZ', 'Czech Republic');
INSERT INTO Country (code, name) VALUES ('DK', 'Denmark');
INSERT INTO Country (code, name) VALUES ('DJ', 'Djibouti');
INSERT INTO Country (code, name) VALUES ('DM', 'Dominica');
INSERT INTO Country (code, name) VALUES ('DO', 'Dominican Republic');
INSERT INTO Country (code, name) VALUES ('EC', 'Ecuador');
INSERT INTO Country (code, name) VALUES ('EG', 'Egypt');
INSERT INTO Country (code, name) VALUES ('SV', 'El Salvador');
INSERT INTO Country (code, name) VALUES ('GQ', 'Equatorial Guinea');
INSERT INTO Country (code, name) VALUES ('ER', 'Eritrea');
INSERT INTO Country (code, name) VALUES ('EE', 'Estonia');
INSERT INTO Country (code, name) VALUES ('ET', 'Ethiopia');
INSERT INTO Country (code, name) VALUES ('FK', 'Falkland Islands (Malvinas)');
INSERT INTO Country (code, name) VALUES ('FO', 'Faroe Islands');
INSERT INTO Country (code, name) VALUES ('FJ', 'Fiji');
INSERT INTO Country (code, name) VALUES ('FI', 'Finland');
INSERT INTO Country (code, name) VALUES ('FR', 'France');
INSERT INTO Country (code, name) VALUES ('GF', 'French Guiana');
INSERT INTO Country (code, name) VALUES ('PF', 'French Polynesia');
INSERT INTO Country (code, name) VALUES ('TF', 'French Southern Territories');
INSERT INTO Country (code, name) VALUES ('GA', 'Gabon');
INSERT INTO Country (code, name) VALUES ('GM', 'Gambia');
INSERT INTO Country (code, name) VALUES ('GE', 'Georgia');
INSERT INTO Country (code, name) VALUES ('DE', 'Germany');
INSERT INTO Country (code, name) VALUES ('GH', 'Ghana');
INSERT INTO Country (code, name) VALUES ('GI', 'Gibraltar');
INSERT INTO Country (code, name) VALUES ('GR', 'Greece');
INSERT INTO Country (code, name) VALUES ('GL', 'Greenland');
INSERT INTO Country (code, name) VALUES ('GD', 'Grenada');
INSERT INTO Country (code, name) VALUES ('GP', 'Guadeloupe');
INSERT INTO Country (code, name) VALUES ('GU', 'Guam');
INSERT INTO Country (code, name) VALUES ('GT', 'Guatemala');
INSERT INTO Country (code, name) VALUES ('GN', 'Guinea');
INSERT INTO Country (code, name) VALUES ('GW', 'Guinea-Bissau');
INSERT INTO Country (code, name) VALUES ('GY', 'Guyana');
INSERT INTO Country (code, name) VALUES ('HT', 'Haiti');
INSERT INTO Country (code, name) VALUES ('HM', 'Heard Island and Mcdonald Islands');
INSERT INTO Country (code, name) VALUES ('VA', 'Holy See (Vatican City State)');
INSERT INTO Country (code, name) VALUES ('HN', 'Honduras');
INSERT INTO Country (code, name) VALUES ('HK', 'Hong Kong');
INSERT INTO Country (code, name) VALUES ('HU', 'Hungary');
INSERT INTO Country (code, name) VALUES ('IS', 'Iceland');
INSERT INTO Country (code, name) VALUES ('IN', 'India');
INSERT INTO Country (code, name) VALUES ('ID', 'Indonesia');
INSERT INTO Country (code, name) VALUES ('IR', 'Iran, Islamic Republic of');
INSERT INTO Country (code, name) VALUES ('IQ', 'Iraq');
INSERT INTO Country (code, name) VALUES ('IE', 'Ireland');
INSERT INTO Country (code, name) VALUES ('IL', 'Israel');
INSERT INTO Country (code, name) VALUES ('IT', 'Italy');
INSERT INTO Country (code, name) VALUES ('JM', 'Jamaica');
INSERT INTO Country (code, name) VALUES ('JP', 'Japan');
INSERT INTO Country (code, name) VALUES ('JO', 'Jordan');
INSERT INTO Country (code, name) VALUES ('KZ', 'Kazakhstan');
INSERT INTO Country (code, name) VALUES ('KE', 'Kenya');
INSERT INTO Country (code, name) VALUES ('KI', 'Kiribati');
INSERT INTO Country (code, name) VALUES ('KP', 'Korea, Democratic People''s Republic of');
INSERT INTO Country (code, name) VALUES ('KR', 'Korea, Republic of');
INSERT INTO Country (code, name) VALUES ('KW', 'Kuwait');
INSERT INTO Country (code, name) VALUES ('KG', 'Kyrgyzstan');
INSERT INTO Country (code, name) VALUES ('LA', 'Lao People''s Democratic Republic');
INSERT INTO Country (code, name) VALUES ('LV', 'Latvia');
INSERT INTO Country (code, name) VALUES ('LB', 'Lebanon');
INSERT INTO Country (code, name) VALUES ('LS', 'Lesotho');
INSERT INTO Country (code, name) VALUES ('LR', 'Liberia');
INSERT INTO Country (code, name) VALUES ('LY', 'Libyan Arab Jamahiriya');
INSERT INTO Country (code, name) VALUES ('LI', 'Liechtenstein');
INSERT INTO Country (code, name) VALUES ('LT', 'Lithuania');
INSERT INTO Country (code, name) VALUES ('LU', 'Luxembourg');
INSERT INTO Country (code, name) VALUES ('MO', 'Macao');
INSERT INTO Country (code, name) VALUES ('MK', 'Macedonia, the Former Yugoslav Republic of');
INSERT INTO Country (code, name) VALUES ('MG', 'Madagascar');
INSERT INTO Country (code, name) VALUES ('MW', 'Malawi');
INSERT INTO Country (code, name) VALUES ('MY', 'Malaysia');
INSERT INTO Country (code, name) VALUES ('MV', 'Maldives');
INSERT INTO Country (code, name) VALUES ('ML', 'Mali');
INSERT INTO Country (code, name) VALUES ('MT', 'Malta');
INSERT INTO Country (code, name) VALUES ('MH', 'Marshall Islands');
INSERT INTO Country (code, name) VALUES ('MQ', 'Martinique');
INSERT INTO Country (code, name) VALUES ('MR', 'Mauritania');
INSERT INTO Country (code, name) VALUES ('MU', 'Mauritius');
INSERT INTO Country (code, name) VALUES ('YT', 'Mayotte');
INSERT INTO Country (code, name) VALUES ('MX', 'Mexico');
INSERT INTO Country (code, name) VALUES ('FM', 'Micronesia, Federated States of');
INSERT INTO Country (code, name) VALUES ('MD', 'Moldova, Republic of');
INSERT INTO Country (code, name) VALUES ('MC', 'Monaco');
INSERT INTO Country (code, name) VALUES ('MN', 'Mongolia');
INSERT INTO Country (code, name) VALUES ('MS', 'Montserrat');
INSERT INTO Country (code, name) VALUES ('MA', 'Morocco');
INSERT INTO Country (code, name) VALUES ('MZ', 'Mozambique');
INSERT INTO Country (code, name) VALUES ('MM', 'Myanmar');
INSERT INTO Country (code, name) VALUES ('NA', 'Namibia');
INSERT INTO Country (code, name) VALUES ('NR', 'Nauru');
INSERT INTO Country (code, name) VALUES ('NP', 'Nepal');
INSERT INTO Country (code, name) VALUES ('NL', 'Netherlands');
INSERT INTO Country (code, name) VALUES ('AN', 'Netherlands Antilles');
INSERT INTO Country (code, name) VALUES ('NC', 'New Caledonia');
INSERT INTO Country (code, name) VALUES ('NZ', 'New Zealand');
INSERT INTO Country (code, name) VALUES ('NI', 'Nicaragua');
INSERT INTO Country (code, name) VALUES ('NE', 'Niger');
INSERT INTO Country (code, name) VALUES ('NG', 'Nigeria');
INSERT INTO Country (code, name) VALUES ('NU', 'Niue');
INSERT INTO Country (code, name) VALUES ('NF', 'Norfolk Island');
INSERT INTO Country (code, name) VALUES ('MP', 'Northern Mariana Islands');
INSERT INTO Country (code, name) VALUES ('NO', 'Norway');
INSERT INTO Country (code, name) VALUES ('OM', 'Oman');
INSERT INTO Country (code, name) VALUES ('PK', 'Pakistan');
INSERT INTO Country (code, name) VALUES ('PW', 'Palau');
INSERT INTO Country (code, name) VALUES ('PS', 'Palestinian Territory, Occupied');
INSERT INTO Country (code, name) VALUES ('PA', 'Panama');
INSERT INTO Country (code, name) VALUES ('PG', 'Papua New Guinea');
INSERT INTO Country (code, name) VALUES ('PY', 'Paraguay');
INSERT INTO Country (code, name) VALUES ('PE', 'Peru');
INSERT INTO Country (code, name) VALUES ('PH', 'Philippines');
INSERT INTO Country (code, name) VALUES ('PN', 'Pitcairn');
INSERT INTO Country (code, name) VALUES ('PL', 'Poland');
INSERT INTO Country (code, name) VALUES ('PT', 'Portugal');
INSERT INTO Country (code, name) VALUES ('PR', 'Puerto Rico');
INSERT INTO Country (code, name) VALUES ('QA', 'Qatar');
INSERT INTO Country (code, name) VALUES ('RE', 'Reunion');
INSERT INTO Country (code, name) VALUES ('RO', 'Romania');
INSERT INTO Country (code, name) VALUES ('RU', 'Russian Federation');
INSERT INTO Country (code, name) VALUES ('RW', 'Rwanda');
INSERT INTO Country (code, name) VALUES ('SH', 'Saint Helena');
INSERT INTO Country (code, name) VALUES ('KN', 'Saint Kitts and Nevis');
INSERT INTO Country (code, name) VALUES ('LC', 'Saint Lucia');
INSERT INTO Country (code, name) VALUES ('PM', 'Saint Pierre and Miquelon');
INSERT INTO Country (code, name) VALUES ('VC', 'Saint Vincent and the Grenadines');
INSERT INTO Country (code, name) VALUES ('WS', 'Samoa');
INSERT INTO Country (code, name) VALUES ('SM', 'San Marino');
INSERT INTO Country (code, name) VALUES ('ST', 'Sao Tome and Principe');
INSERT INTO Country (code, name) VALUES ('SA', 'Saudi Arabia');
INSERT INTO Country (code, name) VALUES ('SN', 'Senegal');
INSERT INTO Country (code, name) VALUES ('CS', 'Serbia and Montenegro');
INSERT INTO Country (code, name) VALUES ('SC', 'Seychelles');
INSERT INTO Country (code, name) VALUES ('SL', 'Sierra Leone');
INSERT INTO Country (code, name) VALUES ('SG', 'Singapore');
INSERT INTO Country (code, name) VALUES ('SK', 'Slovakia');
INSERT INTO Country (code, name) VALUES ('SI', 'Slovenia');
INSERT INTO Country (code, name) VALUES ('SB', 'Solomon Islands');
INSERT INTO Country (code, name) VALUES ('SO', 'Somalia');
INSERT INTO Country (code, name) VALUES ('ZA', 'South Africa');
INSERT INTO Country (code, name) VALUES ('GS', 'South Georgia and the South Sandwich Islands');
INSERT INTO Country (code, name) VALUES ('ES', 'Spain');
INSERT INTO Country (code, name) VALUES ('LK', 'Sri Lanka');
INSERT INTO Country (code, name) VALUES ('SD', 'Sudan');
INSERT INTO Country (code, name) VALUES ('SR', 'Suriname');
INSERT INTO Country (code, name) VALUES ('SJ', 'Svalbard and Jan Mayen');
INSERT INTO Country (code, name) VALUES ('SZ', 'Swaziland');
INSERT INTO Country (code, name) VALUES ('SE', 'Sweden');
INSERT INTO Country (code, name) VALUES ('CH', 'Switzerland');
INSERT INTO Country (code, name) VALUES ('SY', 'Syrian Arab Republic');
INSERT INTO Country (code, name) VALUES ('TW', 'Taiwan, Province of China');
INSERT INTO Country (code, name) VALUES ('TJ', 'Tajikistan');
INSERT INTO Country (code, name) VALUES ('TZ', 'Tanzania, United Republic of');
INSERT INTO Country (code, name) VALUES ('TH', 'Thailand');
INSERT INTO Country (code, name) VALUES ('TL', 'Timor-Leste');
INSERT INTO Country (code, name) VALUES ('TG', 'Togo');
INSERT INTO Country (code, name) VALUES ('TK', 'Tokelau');
INSERT INTO Country (code, name) VALUES ('TO', 'Tonga');
INSERT INTO Country (code, name) VALUES ('TT', 'Trinidad and Tobago');
INSERT INTO Country (code, name) VALUES ('TN', 'Tunisia');
INSERT INTO Country (code, name) VALUES ('TR', 'Turkey');
INSERT INTO Country (code, name) VALUES ('TM', 'Turkmenistan');
INSERT INTO Country (code, name) VALUES ('TC', 'Turks and Caicos Islands');
INSERT INTO Country (code, name) VALUES ('TV', 'Tuvalu');
INSERT INTO Country (code, name) VALUES ('UG', 'Uganda');
INSERT INTO Country (code, name) VALUES ('UA', 'Ukraine');
INSERT INTO Country (code, name) VALUES ('AE', 'United Arab Emirates');
INSERT INTO Country (code, name) VALUES ('GB', 'United Kingdom');
INSERT INTO Country (code, name) VALUES ('US', 'United States');
INSERT INTO Country (code, name) VALUES ('UM', 'United States Minor Outlying Islands');
INSERT INTO Country (code, name) VALUES ('UY', 'Uruguay');
INSERT INTO Country (code, name) VALUES ('UZ', 'Uzbekistan');
INSERT INTO Country (code, name) VALUES ('VU', 'Vanuatu');
INSERT INTO Country (code, name) VALUES ('VE', 'Venezuela');
INSERT INTO Country (code, name) VALUES ('VN', 'Viet Nam');
INSERT INTO Country (code, name) VALUES ('VG', 'Virgin Islands, British');
INSERT INTO Country (code, name) VALUES ('VI', 'Virgin Islands, U.s.');
INSERT INTO Country (code, name) VALUES ('WF', 'Wallis and Futuna');
INSERT INTO Country (code, name) VALUES ('EH', 'Western Sahara');
INSERT INTO Country (code, name) VALUES ('YE', 'Yemen');
INSERT INTO Country (code, name) VALUES ('ZM', 'Zambia');
INSERT INTO Country (code, name) VALUES ('ZW', 'Zimbabwe');


-- INSERT MONETARY UNITS               --
-- Warning: No exchange rates included --
-- EUR (Euro) is the reference unit    --

INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('AED', 'United Arab Emirates dirham', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('AFN', 'Afghan afghani', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ALL', 'Albanian lek', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('AMD', 'Armenian dram', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ANG', 'Netherlands Antillean guilder', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('AOA', 'Angolan kwanza', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ARS', 'Argentine peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('AUD', 'Australian dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('AWG', 'Aruban florin', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('AZN', 'Azerbaijani manat', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BAM', 'Bosnia and Herzegovina convertible mark', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BBD', 'Barbados dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BDT', 'Bangladeshi taka', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BGN', 'Bulgarian lev', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BHD', 'Bahraini dinar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BIF', 'Burundian franc', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BMD', 'Bermudian dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BND', 'Brunei dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BOB', 'Boliviano', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BOV', 'Bolivian Mvdol (funds code)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BRL', 'Brazilian real', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BSD', 'Bahamian dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BTN', 'Bhutanese ngultrum', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BWP', 'Botswana pula', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BYR', 'Belarusian ruble', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('BZD', 'Belize dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CAD', 'Canadian dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CDF', 'Congolese franc', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CHE', 'WIR Bank (complementary currency) CHE', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CHF', 'Swiss franc', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CHW', 'WIR Bank (complementary currency) CHW', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CLF', 'Unidad de Fomento (funds code)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CLP', 'Chilean peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CNY', 'Chinese yuan', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('COP', 'Colombian peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('COU', 'Unidad de Valor Real', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CRC', 'Costa Rican colon', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CUC', 'Cuban convertible peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CUP', 'Cuban peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CVE', 'Cape Verde escudo', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('CZK', 'Czech koruna', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('DJF', 'Djiboutian franc', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('DKK', 'Danish krone', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('DOP', 'Dominican peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('DZD', 'Algerian dinar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('EEK', 'Estonian kroon', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('EGP', 'Egyptian pound', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ERN', 'Eritrean nakfa', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ETB', 'Ethiopian birr', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('EUR', 'Euro', 1, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('FJD', 'Fiji dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('FKP', 'Falkland Islands pound', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('GBP', 'Pound sterling', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('GEL', 'Georgian lari', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('GHS', 'Ghanaian cedi', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('GIP', 'Gibraltar pound', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('GMD', 'Gambian dalasi', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('GNF', 'Guinean franc', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('GTQ', 'Guatemalan quetzal', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('GYD', 'Guyanese dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('HKD', 'Hong Kong dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('HNL', 'Honduran lempira', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('HRK', 'Croatian kuna', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('HTG', 'Haitian gourde', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('HUF', 'Hungarian forint', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('IDR', 'Indonesian rupiah', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ILS', 'Israeli new sheqel', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('INR', 'Indian rupee', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('IQD', 'Iraqi dinar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('IRR', 'Iranian rial', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ISK', 'Icelandic króna', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('JMD', 'Jamaican dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('JOD', 'Jordanian dinar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('JPY', 'Japanese yen', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KES', 'Kenyan shilling', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KGS', 'Kyrgyzstani som', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KHR', 'Cambodian riel', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KMF', 'Comoro franc', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KPW', 'North Korean won', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KRW', 'South Korean won', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KWD', 'Kuwaiti dinar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KYD', 'Cayman Islands dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('KZT', 'Kazakhstani tenge', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('LAK', 'Lao kip', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('LBP', 'Lebanese pound', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('LKR', 'Sri Lanka rupee', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('LRD', 'Liberian dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('LSL', 'Lesotho loti', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('LTL', 'Lithuanian litas', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('LVL', 'Latvian lats', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('LYD', 'Libyan dinar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MAD', 'Moroccan dirham', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MDL', 'Moldovan leu', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MGA', 'Malagasy ariary', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MKD', 'Macedonian denar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MMK', 'Myanma kyat', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MNT', 'Mongolian tugrik', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MOP', 'Macanese pataca', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MRO', 'Mauritanian ouguiya', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MUR', 'Mauritian rupee', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MVR', 'Maldivian rufiyaa', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MWK', 'Malawian kwacha', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MXN', 'Mexican peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MXV', 'Mexican Unidad de Inversion (UDI) (funds code)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MYR', 'Malaysian ringgit', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('MZN', 'Mozambican metical', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('NAD', 'Namibian dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('NGN', 'Nigerian naira', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('NIO', 'Cordoba oro', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('NOK', 'Norwegian krone', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('NPR', 'Nepalese rupee', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('NZD', 'New Zealand dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('OMR', 'Omani rial', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('PAB', 'Panamanian balboa', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('PEN', 'Peruvian nuevo sol', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('PGK', 'Papua New Guinean kina', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('PHP', 'Philippine peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('PKR', 'Pakistani rupee', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('PLN', 'Polish złoty', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('PYG', 'Paraguayan guaraní', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('QAR', 'Qatari rial', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('RON', 'Romanian new leu', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('RSD', 'Serbian dinar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('RUB', 'Russian rouble', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('RWF', 'Rwandan franc', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SAR', 'Saudi riyal', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SBD', 'Solomon Islands dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SCR', 'Seychelles rupee', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SDG', 'Sudanese pound', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SEK', 'Swedish krona/kronor', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SGD', 'Singapore dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SHP', 'Saint Helena pound', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SLL', 'Sierra Leonean leone', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SOS', 'Somali shilling', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SRD', 'Surinamese dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('STD', 'São Tomé and Príncipe dobra', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SYP', 'Syrian pound', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('SZL', 'Lilangeni', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('THB', 'Thai baht', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('TJS', 'Tajikistani somoni', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('TMT', 'Turkmenistani manat', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('TND', 'Tunisian dinar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('TOP', 'Tongan paʻanga', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('TRY', 'Turkish lira', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('TTD', 'Trinidad and Tobago dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('TWD', 'New Taiwan dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('TZS', 'Tanzanian shilling', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('UAH', 'Ukrainian hryvnia', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('UGX', 'Ugandan shilling', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('USD', 'United States dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('USN', 'United States dollar (next day) (funds code)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('USS', 'United States dollar (same day) (funds code)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('UYU', 'Uruguayan peso', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('UZS', 'Uzbekistan som', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('VEF', 'Venezuelan bolívar fuerte', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('VND', 'Vietnamese đồng', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('VUV', 'Vanuatu vatu', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('WST', 'Samoan tala', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XAF', 'CFA franc BEAC', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XAG', 'Silver (one troy ounce)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XAU', 'Gold (one troy ounce)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XBA', 'European Composite Unit (EURCO)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XBB', 'European Monetary Unit (E.M.U.-6)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XBC', 'European Unit of Account 9 (E.U.A.-9)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XBD', 'European Unit of Account 17 (E.U.A.-17)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XCD', 'East Caribbean dollar', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XDR', 'Special Drawing Rights', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XFU', 'UIC franc (special settlement currency)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XOF', 'CFA Franc BCEAO', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XPD', 'Palladium (one troy ounce)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XPF', 'CFP franc', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XPT', 'Platinum (one troy ounce)', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XTS', 'Code reserved for testing purposes', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('XXX', 'No currency', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('YER', 'Yemeni rial', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ZAR', 'South African rand', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ZMK', 'Zambian kwacha', 0, 1);
INSERT INTO MonetaryUnit (id, name, reference, factor) VALUES ('ZWL', 'Zimbabwe dollar', 0, 1);


-- INSERT EFFORT UNITS                      --
-- MM (Man Months) is the reference unit --

INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('MYR', 'Man Years', 0, 0.0833333333333333333333333333);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('MM', 'Man Months', 1, 1);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('MDAY', 'Man Days', 0, 30.4167);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('MHR', 'Man Hours', 0, 730.0008);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('PYR', 'Person Years', 0, 0.0833333333333333333333333333);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('PM', 'Person Months', 0, 1);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('PDAY', 'Person Days', 0, 30.4167);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('PHR', 'Person Hours', 0, 8765.82);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('SYR', 'Staff Years', 0, 0.0833333333333333333333333333);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('SM', 'Staff Months', 0, 1);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('SDAY', 'Staff Days', 0, 30.4167);
INSERT INTO EffortUnit (id, name, reference, factor) VALUES ('SHR', 'Staff Hours', 0, 730.0008);


-- INSERT MTTD TIME UNITS           --
-- DAY (Days) is the reference unit --

INSERT INTO MTTDTimeUnit (id, name, reference, factor) VALUES ('SEC', 'Seconds', 0, 0.00001157407407407407407407407407);
INSERT INTO MTTDTimeUnit (id, name, reference, factor) VALUES ('MIN', 'Minutes', 0, 0.00069444444444444444444444444444);
INSERT INTO MTTDTimeUnit (id, name, reference, factor) VALUES ('HR', 'Hours', 0, 0.04166666666666666666666666666667);
INSERT INTO MTTDTimeUnit (id, name, reference, factor) VALUES ('DAY', 'Days', 1, 1);
INSERT INTO MTTDTimeUnit (id, name, reference, factor) VALUES ('W', 'Weeks', 0, 7);


-- INSERT USE CASE COMPLEXITIES --

INSERT INTO UseCaseComplexity (id, name, factor) VALUES ('H', 'High', 10.08);
INSERT INTO UseCaseComplexity (id, name, factor) VALUES ('HR', 'High Reuse', 3.6);
INSERT INTO UseCaseComplexity (id, name, factor) VALUES ('L', 'Low', 2.88);
INSERT INTO UseCaseComplexity (id, name, factor) VALUES ('LR', 'Low Reuse', 0.72);
INSERT INTO UseCaseComplexity (id, name, factor) VALUES ('M', 'Medium', 5.76);
INSERT INTO UseCaseComplexity (id, name, factor) VALUES ('MR', 'Medium Reuse', 2.16);
INSERT INTO UseCaseComplexity (id, name, factor) VALUES ('VL', 'Very Low', 0.576);
INSERT INTO UseCaseComplexity (id, name, factor) VALUES ('VLR', 'Very Low Reuse', 0.144);


-- INSERT CERTAINTIES --

INSERT INTO Certainty (id, name, factor) VALUES ('H', 'High', 1);
INSERT INTO Certainty (id, name, factor) VALUES ('L', 'Low', 0.4);
INSERT INTO Certainty (id, name, factor) VALUES ('M', 'Medium', 0.8);


-- INSERT GRANULARITY LEVELS --

INSERT INTO GranularityLevel (id, name, "VALUE") VALUES (1, 'Decomposed', 1);
INSERT INTO GranularityLevel (id, name, "VALUE") VALUES (2, 'Medium', 2);
INSERT INTO GranularityLevel (id, name, "VALUE") VALUES (3, 'Essential', 4);



-- INSERT GRANULARITY QUESTIONS --

INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'basic_flows', 0.2, 'All use case''s basic flows complete a major interaction or transaction with the system.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'basic_flows', 0.2, 'Some use case''s basic flows complete a major interaction or transaction with the system; most interactions are broken up over more than one use case.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'basic_flows', 0.2, 'No use case''s basic flows complete a major interaction or transaction, but instead describe functions such as Search for a Client.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'arch_express', 0.1, 'Use cases are not associated with system or architectural components.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'arch_express', 0.1, 'Use case occasionally span system or architectural components.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'arch_express', 0.1, 'Use cases are completely locked to specific architectural or system components.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'actor_gen', 0.05, 'Actors in the use case model have been well generalized.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'actor_gen', 0.05, 'Actors in the use case model are mostly generalized, but some concrete users may remain.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'actor_gen', 0.05, 'Use cases are tied to specific concrete users, not abstract actors.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'indep_ui', 0.1, 'Use cases are completely independent of user interface implementations.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'indep_ui', 0.1, 'Use cases assume specific user interface paradigms or implementations.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'indep_ui', 0.1, 'Use cases are tied to specific screens or users functions, and contain specific UI design statements.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'ext_excl', 0.05, 'Use of extends and includes statements is 20% or less of the use case model.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'ext_excl', 0.05, '20-50% of the use case model are extensions or inclusions.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'ext_excl', 0.05, 'More than half of the use cases are extensions or inclusions.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'altern_flows', 0.1, 'Use cases contain many alternate flows.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'altern_flows', 0.1, 'Use cases contain few alternate flows.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'altern_flows', 0.1, 'Use cases usually contain 0-2 alternate flows.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'crud', 0.1, 'CRUD functionality is a portion of an use case.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'crud', 0.1, 'CRUD functionality is the totality of an use case, and sometimes two use cases.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'crud', 0.1, 'Each element of CRUD is dealt with in a separate use case.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'scenarios', 0.2, 'Use cases represent many concrete examples of interaction, e.g. scenarios.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'scenarios', 0.2, 'Use cases represent few scenarios or multiple use cases must be invoked to make a single scenario.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'scenarios', 0.2, 'Scenarios almost always have to invoke several use cases to complete a useful example.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (1, 'testing_appl', 0.1, 'Use cases are useful for usability and system testing.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (2, 'testing_appl', 0.1, 'Use cases are useful for system and unit testing.');
INSERT INTO GranularityQuestion (level, factorName, factor, question) VALUES (3, 'testing_appl', 0.1, 'Use cases are useful for unit testing.');


-- INSERT PI PP LOOKUP TABLE --

INSERT INTO PiPpLookup (pi, pp) VALUES (1, 754);
INSERT INTO PiPpLookup (pi, pp) VALUES (2, 987);
INSERT INTO PiPpLookup (pi, pp) VALUES (3, 1220);
INSERT INTO PiPpLookup (pi, pp) VALUES (4, 1597);
INSERT INTO PiPpLookup (pi, pp) VALUES (5, 1974);
INSERT INTO PiPpLookup (pi, pp) VALUES (6, 2584);
INSERT INTO PiPpLookup (pi, pp) VALUES (7, 3194);
INSERT INTO PiPpLookup (pi, pp) VALUES (8, 4181);
INSERT INTO PiPpLookup (pi, pp) VALUES (9, 5186);
INSERT INTO PiPpLookup (pi, pp) VALUES (10, 6765);
INSERT INTO PiPpLookup (pi, pp) VALUES (11, 8362);
INSERT INTO PiPpLookup (pi, pp) VALUES (12, 10946);
INSERT INTO PiPpLookup (pi, pp) VALUES (13, 13530);
INSERT INTO PiPpLookup (pi, pp) VALUES (14, 17711);
INSERT INTO PiPpLookup (pi, pp) VALUES (15, 21892);
INSERT INTO PiPpLookup (pi, pp) VALUES (16, 28657);
INSERT INTO PiPpLookup (pi, pp) VALUES (17, 35422);
INSERT INTO PiPpLookup (pi, pp) VALUES (18, 46368);
INSERT INTO PiPpLookup (pi, pp) VALUES (19, 57314);
INSERT INTO PiPpLookup (pi, pp) VALUES (20, 75025);
INSERT INTO PiPpLookup (pi, pp) VALUES (21, 92736);
INSERT INTO PiPpLookup (pi, pp) VALUES (22, 121393);
INSERT INTO PiPpLookup (pi, pp) VALUES (23, 150050);
INSERT INTO PiPpLookup (pi, pp) VALUES (24, 196418);


-- INSERT STAFFING SHAPES --

INSERT INTO StaffingShape (id, name) VALUES (1, 'Level Load');
INSERT INTO StaffingShape (id, name) VALUES (2, 'Front Load Rayleigh');
INSERT INTO StaffingShape (id, name) VALUES (3, 'Medium Front Load Rayleigh');
INSERT INTO StaffingShape (id, name) VALUES (4, 'Medium Rear Load Rayleigh');
INSERT INTO StaffingShape (id, name) VALUES (5, 'Rear Load Rayleigh');
INSERT INTO StaffingShape (id, name) VALUES (6, 'Default Rayleigh (Phase 3 only)');
INSERT INTO StaffingShape (id, name) VALUES (7, 'Exponential (Phase 4 only)');
INSERT INTO StaffingShape (id, name) VALUES (8, 'Stair Step (Phase 4 only)');
INSERT INTO StaffingShape (id, name) VALUES (9, 'Straight Line (Phase 4 only)');
INSERT INTO StaffingShape (id, name) VALUES (10, 'Rayleigh (Phase 4 only)');


-- INSERT ROLES --

INSERT INTO Role (id, name) VALUES ('admin', 'Administrator');
INSERT INTO Role (id, name) VALUES ('estimator', 'Estimator');
INSERT INTO Role (id, name) VALUES ('manager', 'Project Manager');


-- INSERT CALCULATION PARAMETERS --

INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_complexity_level_simple', 0);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_complexity_level_moderate', 1);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_complexity_level_embedded', 2);

INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_a_simple', 2.4);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_a_moderate', 3);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_a_embedded', 3.6);

INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_b_simple', 1.05);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_b_moderate', 1.12);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_b_embedded', 1.2);

INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_c_simple', 2.5);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_c_moderate', 2.5);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_c_embedded', 2.5);

INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_d_simple', 0.32);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_d_moderate', 0.35);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_d_embedded', 0.38);

INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_e_5000', 0.16);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_e_20000', 0.18);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_e_30000', 0.28);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_e_40000', 0.34);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_e_50000', 0.37);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_e_>50000', 0.39);

INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_sloc_5000', 0);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_sloc_20000', 1);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_sloc_30000', 2);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_sloc_40000', 3);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_sloc_50000', 4);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('cocomo_sloc_>50000', 5);

INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('max_duration', 3);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('min_duration_factor', 0.75);
INSERT INTO CalculationParameter ("KEY", "VALUE") VALUES ('weeks_per_month', 4.3333333333333333333333);


