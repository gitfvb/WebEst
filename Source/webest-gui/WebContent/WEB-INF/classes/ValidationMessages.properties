# Validation Messages

validator.notNull= May not be empty.
validator.size = Size must be between {min} and {max}.
validator.length = Length must be between {min} and {max}.
validator.assertFalse = Assertion failed.
validator.assertTrue = Assertion failed.
validator.future = Must be a future date.
validator.max = Must be less than or equal to {value}.
validator.min = Must be greater than or equal to {value}.
validator.past = Must be a past date.
validator.pattern = Must match pattern {regex}.
validator.range = Must be between {min} and {max}.
validator.email = Not a well-formed email address.
validator.notEmpty = May not be empty.
javax.validation.constraints.Null.message=Must be null.
javax.validation.constraints.NotNull.message=Must not be empty.
javax.validation.constraints.AssertTrue.message=Must be true.
javax.validation.constraints.AssertFalse.message=Must be false.
javax.validation.constraints.Min.message=Must be greater than or equal to {value}.
javax.validation.constraints.Max.message=Must be less than or equal to {value}.
javax.validation.constraints.Size.message=Size must be between {min} and {max}.
javax.validation.constraints.Digits.message=Numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected).
javax.validation.constraints.Past.message=Must be a past date.
javax.validation.constraints.Future.message=Must be a future date.
javax.validation.constraints.Pattern.message=Must match the following regular expression: {regexp}
validation.useCasePacks.size=There has to be at least one use case package.
validation.useCases.size=There has to be at least one use case in the package. 